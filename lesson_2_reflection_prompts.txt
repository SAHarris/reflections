What happens when you initialize a repository? Why do you need to do it?

This tells git to track changes to the files in the directory by creating a 
.git folder. This gives git a place to track metadata for the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
The staging area exists within Git and allows us to set up our commits before 
creating them- allowing us much more control over the commit.

How can you use the staging area to make sure you have one commit per logical
change?
If I add only the files that are included in the logical changes I want to 
commit, then the commit remarks will make much more sense when reviewed.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Branching allows us to test new features and alternate versions without losing 
our code for working/established versions of the repository. I would use this 
when trying alternate language or complexity versions of software or to test 
alternate layouts, etc.

How do the diagrams help you visualize the branch structure?

Seeing changes on a diagram reinforced how branches connect with previous versions of the repository.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?